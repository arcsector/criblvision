<form theme="dark" version="1.1">
  <label>Stats</label>
  <description>Based off minutely log stats from the Server channel.</description>
  <search id="annotation_search" ref="Deployment Annotations">
    <earliest>$time.earliest$</earliest>
    <latest>$time.latest$</latest>
  </search>
  <fieldset submitButton="true" autoRun="false">
    <input type="time" token="time" searchWhenChanged="true">
      <label>Time Range</label>
      <default>
        <earliest>-15m</earliest>
        <latest>now</latest>
      </default>
    </input>
    <input type="dropdown" token="worker_group" searchWhenChanged="true">
      <label>Worker Group / Standalone</label>
      <choice value="all_instances">All Instances</choice>
      <choice value="all_worker_groups">All Worker Groups</choice>
      <choice value="all_standalone">All Standalone Instances</choice>
      <fieldForLabel>label</fieldForLabel>
      <fieldForValue>worker_group</fieldForValue>
      <search>
        <query>| `dashboard_worker_group_filter`</query>
        <earliest>-24h@h</earliest>
        <latest>now</latest>
      </search>
      <change>
        <condition label="All Instances">
          <set token="worker_group_event_filter">instance_type IN (worker, standalone)</set>
        </condition>
        <condition label="All Worker Groups">
          <set token="worker_group_event_filter">instance_type=worker</set>
        </condition>
        <condition label="All Standalone Instances">
          <set token="worker_group_event_filter">instance_type=standalone</set>
        </condition>
        <condition>
          <set token="worker_group_event_filter">instance_type=worker worker_group="$worker_group$"</set>
        </condition>
      </change>
      <default>all_instances</default>
      <initialValue>all_instances</initialValue>
    </input>
    <input type="dropdown" token="host">
      <label>Host</label>
      <fieldForLabel>label</fieldForLabel>
      <fieldForValue>host</fieldForValue>
      <search>
        <query>| `dashboard_host_filter($worker_group_event_filter|s$)`</query>
        <earliest>$time.earliest$</earliest>
        <latest>$time.latest$</latest>
      </search>
      <choice value="*">All Hosts</choice>
      <default>*</default>
      <initialValue>*</initialValue>
    </input>
    <input type="dropdown" token="span">
      <label>Time Span</label>
      <choice value="auto">Auto</choice>
      <choice value="1m">1m</choice>
      <choice value="5m">5m</choice>
      <choice value="15m">15m</choice>
      <choice value="30m">30m</choice>
      <choice value="1h">1h</choice>
      <choice value="1d">1d</choice>
      <default>auto</default>
      <initialValue>auto</initialValue>
      <change>
        <condition value="auto">
          <set token="span"></set>
        </condition>
      </change>
      <prefix>span=</prefix>
    </input>
    <input type="dropdown" token="splitby" searchWhenChanged="true">
      <label>Split by Worker Process</label>
      <choice value="">No</choice>
      <choice value="by cid">Yes</choice>
      <default></default>
    </input>
    <input type="link" token="how_to_use">
      <label>How to Use</label>
      <choice value="show">Show</choice>
      <choice value="hide">Hide</choice>
      <default>hide</default>
      <initialValue>hide</initialValue>
      <change>
        <condition label="Show">
          <set token="show_details">true</set>
        </condition>
        <condition>
          <unset token="show_details"></unset>
        </condition>
      </change>
    </input>
  </fieldset>
  <row>
    <panel depends="$show_details$">
      <html>
        <div style="font-family: Arial; font-size: 11pt; list-style-type: square; text-align: center;">
          <p>This dashboard displays a series of panels iwth searches baseed off our minutely log stats. These stats are logged every minute by the API and Worker processes. Displayed on this page are CPU and memory usage, active vs blocked event processors (EP), event stats, and persistent queue (PQ) stats.</p>
          <p>
            <b>Note:</b> The PQ stats on this dashboard cannot be split by <code>output</code> because our minutely stats currently do not include with Destination these PQ events are associated with. For more detailed info on PQ, visit the <a href="/app/criblvision/persistent_queue_analytics">Persistent Queue Analytics dashboard</a>.</p>
        </div>
      </html>
    </panel>
  </row>
  <row>
    <panel>
      <chart>
        <title>CPU Usage</title>
        <search>
          <query>`set_cribl_internal_log_index` `set_cribl_log_sourcetype` host=$host$ $worker_group_event_filter$ channel=server message="_raw stats" | timechart $span$ last(cpuPerc) as cpuPerc $splitby$</query>
          <earliest>$time.earliest$</earliest>
          <latest>$time.latest$</latest>
        </search>
        <search base="annotation_search" type="annotation"></search>
        <option name="charting.axisTitleX.text">Time</option>
        <option name="charting.axisTitleY.text">CPU Usage (%)</option>
        <option name="charting.chart">area</option>
        <option name="charting.chart.nullValueMode">zero</option>
        <option name="charting.chart.stackMode">stacked</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.legend.placement">bottom</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <chart>
        <title>Memory Usage</title>
        <search>
          <query>`set_cribl_internal_log_index` `set_cribl_log_sourcetype` host=$host$ $worker_group_event_filter$ channel=server message="_raw stats" | timechart $span$ last(mem.ext) as memExt last(mem.heap) as memHeap last(mem.rss) as memRss $splitby$</query>
          <earliest>$time.earliest$</earliest>
          <latest>$time.latest$</latest>
        </search>
        <search base="annotation_search" type="annotation"></search>
        <option name="charting.axisTitleX.text">Time</option>
        <option name="charting.axisTitleY.text">Memory Usage (MB)</option>
        <option name="charting.chart">area</option>
        <option name="charting.chart.nullValueMode">zero</option>
        <option name="charting.chart.stackMode">stacked</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.legend.placement">bottom</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
    <panel>
      <chart>
        <title>Active vs Blocked Event Processors</title>
        <search>
          <query>`set_cribl_internal_log_index` `set_cribl_log_sourcetype` host=$host$ $worker_group_event_filter$ channel=server message="_raw stats" | timechart $span$ last(activeEP) as activeEP last(blockedEP) as blockedEP $splitby$</query>
          <earliest>$time.earliest$</earliest>
          <latest>$time.latest$</latest>
        </search>
        <search base="annotation_search" type="annotation"></search>
        <option name="charting.axisTitleX.text">Time</option>
        <option name="charting.axisTitleY.text">Count</option>
        <option name="charting.chart">area</option>
        <option name="charting.chart.nullValueMode">zero</option>
        <option name="charting.chart.stackMode">stacked</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.legend.placement">bottom</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <chart>
        <title>Event Stats</title>
        <search>
          <query>`set_cribl_internal_log_index` `set_cribl_log_sourcetype` host=$host$ $worker_group_event_filter$ channel=server message="_raw stats" | timechart $span$ last(droppedEvents) as DroppedEvents last(outEvents) as outEvents last(inEvents) as inEvents $splitby$</query>
          <earliest>$time.earliest$</earliest>
          <latest>$time.latest$</latest>
        </search>
        <search base="annotation_search" type="annotation"></search>
        <option name="charting.axisTitleX.text">Time</option>
        <option name="charting.axisTitleY.text">Count</option>
        <option name="charting.chart">area</option>
        <option name="charting.chart.nullValueMode">zero</option>
        <option name="charting.chart.stackMode">stacked</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.legend.placement">bottom</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
    <panel>
      <chart>
        <title>Persistent Queue Stats</title>
        <search>
          <query>`set_cribl_internal_log_index` `set_cribl_log_sourcetype` host=$host$ $worker_group_event_filter$ channel=server message="_raw stats" | timechart $span$ last(pqInBytes) as pqInBytes last(pqOutBytes) as pqOutBytes last(pqTotalBytes) as pqTotalBytes $splitby$</query>
          <earliest>$time.earliest$</earliest>
          <latest>$time.latest$</latest>
        </search>
        <search base="annotation_search" type="annotation"></search>
        <option name="charting.axisTitleX.text">Time</option>
        <option name="charting.axisTitleY.text">Size (B)</option>
        <option name="charting.chart">area</option>
        <option name="charting.chart.nullValueMode">zero</option>
        <option name="charting.chart.stackMode">stacked</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.legend.placement">bottom</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
  </row>
</form>